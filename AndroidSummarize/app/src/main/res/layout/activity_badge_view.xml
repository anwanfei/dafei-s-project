<?xml version="1.0" encoding="utf-8"?>
<!--CoordinatorLayout从另一层面去控制子view之间触摸事件的布局，Design library中的很多控件都利用了它。
    当你将FloatingActionButton作为一个子View添加进CoordinatorLayout
    并且将CoordinatorLayout传递给Snackbar.make()，在3.0及其以上的设备上，Snackbar不会
    显示在悬浮按钮的上面，而是FloatingActionButton利用CoordinatorLayout提供的回调方法，
    在Snackbar以动画效果进入的时候自动向上移动让出位置，
    并且在Snackbar动画地消失的时候回到原来的位置，不需要额外的代码。-->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <android.support.design.widget.TabLayout
        android:id="@+id/tablayout_news"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/white"
        android:layout_marginTop="1dp"
        app:tabGravity="center"
        app:tabIndicatorColor="@color/colorTitlebar"
        app:tabMode="fixed"
        app:tabSelectedTextColor="@color/colorTitlebar"
        app:tabTextColor="@color/material_grey_300" />

    <android.support.v4.view.ViewPager
        android:id="@+id/viewpager_news"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="1dp" />

</LinearLayout>
